{"version":3,"sources":["FieldItem.jsx","Field.jsx","App.js","index.js"],"names":["StyledDiv","styled","div","attrs","props","open","color","FieldItem","React","memo","params","handler","onClick","colors","createCardBoard","array","i","length","j","Math","floor","random","shuffleArray","concat","map","el","ind","id","Field","useState","openCardsAmount","setOpenCardsAmount","cardList","setCardList","showModal","setShowModal","currentCards","setCurrentCards","useEffect","prev","next","isWin","prevState","changeOpenStatus","useCallback","prevItems","item","className","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec826b92.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst StyledDiv = styled.div.attrs((props) => props)`\r\n  border: 1px solid rgb(219, 184, 240);\r\n  padding: 10px;\r\n  margin-bottom: 1%;\r\n  width: 11%;\r\n  /* height: 60px; */\r\n  /* height: 14%; */\r\n  /* width: 100%; */\r\n  /* max-width: 50px; */\r\n  transition: all 0.3s;\r\n  background-color: ${(props) => (props.open ? props.color : \"black\")};\r\n  @media screen and (min-width: 100px) and (max-width: 460px) {\r\n    width: 9%;\r\n    /* margin-bottom: 7px; */\r\n  }\r\n`;\r\n\r\nconst FieldItem = React.memo(({ params, handler }) => {\r\n  const { color, open } = params;\r\n\r\n  const handlerClick = () => {\r\n    !open && handler(params);\r\n  };\r\n\r\n  return (\r\n    <StyledDiv onClick={handlerClick} color={color} open={open}></StyledDiv>\r\n  );\r\n});\r\n\r\nexport default FieldItem;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport FieldItem from \"./FieldItem\";\r\n\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n}\r\nlet colors = [\r\n  \"#bef104\",\r\n  \"#03b922\",\r\n  \"#ff5ec1\",\r\n  \"#008fbb\",\r\n  \"#00eeff\",\r\n  \"#ff0000\",\r\n  \"#ff8800\",\r\n  \"#c8b7f7\",\r\n  \"#2b00a1\",\r\n  \"#44253b\",\r\n  \"#254425\",\r\n  \"#550000\",\r\n  \"#f8fc00\",\r\n  \"#424242\",\r\n  \"#fcfcfc\",\r\n  \"#810077\",\r\n  \"#fcc100\",\r\n  \"#665300\",\r\n];\r\n\r\nfunction createCardBoard() {\r\n  const colorList = colors?.concat(...colors);\r\n  const shuffledArray = shuffleArray(colorList);\r\n\r\n  return shuffledArray.map((el, ind) => {\r\n    return { id: ind, color: el, open: false };\r\n  });\r\n}\r\n\r\nconst Field = () => {\r\n  const [openCardsAmount, setOpenCardsAmount] = useState(0);\r\n  const [cardList, setCardList] = useState(createCardBoard);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [currentCards, setCurrentCards] = useState([]);\r\n\r\n  const isWin = () => {\r\n    if (currentCards.length === 2 && openCardsAmount === cardList.length - 2)\r\n      return true;\r\n  };\r\n\r\n  const getCompare = (prev, next) => {\r\n    return prev.color === next.color ? true : false;\r\n  };\r\n\r\n  const startAgain = () => {\r\n    setShowModal(false);\r\n    setCardList(createCardBoard());\r\n    setCurrentCards([]);\r\n    setOpenCardsAmount(0);\r\n  };\r\n\r\n  const finishGame = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isWin()) return finishGame();\r\n\r\n    if (currentCards.length === 3) {\r\n      let isSame = getCompare(currentCards[0], currentCards[1]);\r\n      if (!isSame) {\r\n        changeOpenStatus(currentCards[0]);\r\n        changeOpenStatus(currentCards[1]);\r\n        setCurrentCards((prev) => {\r\n          return [prev[2]];\r\n        });\r\n      } else {\r\n        setOpenCardsAmount((prevState) => prevState + 2);\r\n        setCurrentCards((prev) => {\r\n          return [prev[2]];\r\n        });\r\n      }\r\n    }\r\n  }, [currentCards]);\r\n\r\n  const handler = useCallback((params) => {\r\n    changeOpenStatus(params);\r\n\r\n    if (currentCards.length === 0) {\r\n      setCurrentCards((prev) => {\r\n        return [...prev, params];\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const changeOpenStatus = (params) => {\r\n    setCardList((prevItems) =>\r\n      prevItems.map((item) => {\r\n        return item.id !== params.id ? item : { ...item, open: !item.open };\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <div className=\"modal-wrap\">\r\n          <div className=\"modal\">\r\n            <div className=\"modal__title\">\r\n              <p> Вы победили! Попробуем снова?</p>\r\n              <button onClick={startAgain} className=\"modal__btn\">\r\n                Да!\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"app-wrap\">\r\n        <div className=\"field\">\r\n          {cardList.map((params, ind) => {\r\n            return (\r\n              <FieldItem\r\n                key={ind}\r\n                params={params}\r\n                handler={handler}\r\n                currentCards={currentCards}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Field;\r\n","import './App.css';\nimport Field from './Field';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Field />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}